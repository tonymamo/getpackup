rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Make sure the uid of the requesting user matches name of the user
    // document. The wildcard expression {tripId} makes the tripId variable
    // available in rules.
    match /trips/{tripId}/{document=**} {
      allow read, create: if request.auth != null;
      allow write:
        if get(/databases/$(database)/documents/trips/$(tripId)).data.owner == request.auth.uid || resource.data.tripMembers[request.auth.uid] != null;
        match /packing-list/{item} {
          allow read, create, write: if request.auth != null;
        }
    }
    match /gear/{document} {
      allow read: if request.auth != null;
      allow create, write, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /gear-closet/{userId}/{document=**} {
    	allow create: if request.auth != null;
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId
    }
  }
}